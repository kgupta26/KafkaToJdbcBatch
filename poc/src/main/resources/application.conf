
kafka-sink-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 2
  }
  throughput = 30
}

server-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 1
  }
  throughput = 30
}

consumer {
  configs = [
    {
      name = "value.deserializer"
      value = "io.confluent.kafka.serializers.KafkaAvroDeserializer"
    },
    {
      name = "key.deserializer"
      value = "org.apache.kafka.common.serialization.StringDeserializer"
    },
    {
      name = "specific.avro.reader"
      value = "true"
    },
    {
      name = "enable.auto.commit"
      value = "true"
    },
    {
      name = "auto.offset.reset"
      value = "earliest"
    },
    {
      name = "client.id"
      value = "KafkaBatchDemoApp"
    },
    {
      name = "group.id"
      value = "KafkaBatchDemo"
    },
    {
      name = "max.poll.records"
      value = "20000"
    },
    {
      name = "fetch.min.bytes"
      value = "1000"
    }
    {
      name = "schema.registry.url"
      value = "http://localhost:8081"
      value = ${?APP_SCHEMA_REGISTRY_URL}
    },
    {
      name = "bootstrap.servers"
      value = "http://localhost:9092"
      value = ${?APP_KAFKA_BOOTSTRAP_SERVERS}
    }
  ]
}

//akka {
//  loglevel = DEBUG
//}
//
//mySpecialConfig {
//  akka {
//    loglevel = INFO
//  }
//}
//
//# time assertion test config
//specialTimeAssertionsConfig {
//  akka.test.single-expect-default = 0.3s
//}
//
//#intercepting log messages
//interceptingLogMessages {
//  akka {
//    loglevel = INFO
//    loggers = ["akka.testkit.TestEventListener"]
//    test {
//      filter-leeway = 5s
//    }
//  }
//}
//
//#routers demo
//routersDemo {
//  akka {
//    actor.deployment { //very important for routing
//      /poolMaster2 { //this is going to be the name of the ACTOR that I am going to instantiate
//        router = round-robin-pool //what type of pool
//        nr-of-instances = 5 //number of instances = 5
//      }
//
//      /groupMaster2 {
//        router = round-robin-group
//        routees.paths = ["/user/slave_1", "/user/slave_2", "/user/slave_3", "/user/slave_4", "/user/slave_5"]
//      }
//    }
//  }
//}
//
//#dispatcher demo
//
//my-dispatcher {
//  //there are other types of dispatchers, Dispatcher is default and basic
//  type = Dispatcher #
//  executor = "thread-pool-executor"
//  thread-pool-executor {
//    fixed-pool-size = 1
//  }
//  throughput = 30
//}
//
//dispatchersDemo {
//  akka.actor.deployment {
//    /rtjvm {
//      dispatcher = my-dispatcher
//    }
//  }
//}
//
//
//mailboxesDemo {
//
//  //mailboxes demo
//  support-ticket-dispatcher {
//    mailbox-type = "part5infra.Mailboxes$SupportTickerPriorityMailbox"
//  }
//
//  control-mailbox {
//    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
//  }
//
//  akka.actor.deployment {
//    /altConrolAwareActor {
//      mailbox = control-mailbox
//    }
//  }
//
//}